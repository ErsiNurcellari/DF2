<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\Storage;
use \Plank\Mediable\Media as Mediable;

class Media extends Mediable
{
    protected $appends = array('token');

    public static function boot()
    {
        parent::boot();

        static::deleted(function ($model){
            if (!$model->meta->count())
            {
                return;
            }

            $model->meta->each(function ($item, $key){
                Storage::disk('public')->delete($item->path);
            });
        });
    }

    public function meta()
    {
        return $this->hasMany(MediaMeta::class);
    }

    public function getUrl($size = ''): string
    {
        if ($size == '') {
            return parent::getUrl(); // TODO: Change the autogenerated stub
        } else {
            $image = $this->meta()->where('size_name', $size)->first();
            if ($image) {
                return url(Storage::url($image->path));
            } else {
                return url('assets/img/thumb.png');
            }
        }
    }

    public function getTokenAttribute()
    {
        return encrypt($this->getDiskPath());
    }
}
